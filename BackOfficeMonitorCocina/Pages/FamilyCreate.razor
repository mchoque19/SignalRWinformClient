@page "/new"
@page "/new/{Id:int}"
@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Family> _GenericRespository
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization;
@attribute [Authorize]

<h3>FamilyCreate</h3>
 
 
<EditForm Model="family">
    <div class="container-fluid">
        <div class="formbtn-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="family.Name"></InputText>
            </div>
        </div>
          <div class="formbtn-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="SaveFamily">Guardar</button>
            </div>
        </div>
    </div>
</EditForm> 
@code {
    [Parameter]
    public int Id { get; set; }

    DAL.DAO.Family family = new DAL.DAO.Family();
    private async Task SaveFamily()
    {
        if (Id != 0)
        {
            await base.OnInitializedAsync();
            var response = _GenericRespository.Update(family);
            if (response)
            {
                Console.WriteLine("exito");
                NavigationManager.NavigateTo("family");
            }
            else
            {
                Console.WriteLine("bad");
            }

        }
        else
        {
            await base.OnInitializedAsync();
            var response = _GenericRespository.Insert(family);
            if (response)
            {
                Console.WriteLine("exito");
                NavigationManager.NavigateTo("family");
            }
            else
            {
                Console.WriteLine("bad");
            }
        }     
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            family = await _GenericRespository.GetByIdAsync(Id);
        }
    }
}
