@using MudBlazor;
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject DAL.Services.FamilyService familyService
<MudDialog>
    <DialogContent>
   @*      <MudSelect T="int" MultiSelection="true" SelectAll="true"
                   SelectAllText="Seleccionar"
        @bind-Value="value"
        @bind-SelectedValues="options"
                   MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))"
                   Label="Familia" AdornmentIcon="@Icons.Material.Filled.Search">
            @foreach (var item in familyList)
            {
                <MudSelectItem T="int" Value="@item.Id">@item.Name</MudSelectItem>
            }
        </MudSelect> *@


        <MudSelect T="DAL.DAO.Family" Label="Familia" AnchorOrigin="Origin.BottomCenter"    >
            @foreach (var item in familyList)
            {
                <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
            }
        </MudSelect>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Guardar</MudButton>
    </DialogActions>
</MudDialog>


@code {
    //Para ESTADO
    [Parameter] public DAL.DAO.Monitor monitor { get; set; } = new DAL.DAO.Monitor();
    [Parameter]
    public IEnumerable<DAL.DAO.Family> familyList { get; set; } = Array.Empty<DAL.DAO.Family>();
    private int value { get; set; }
    private IEnumerable<int> options { get; set; } = new HashSet<int>();
    private string GetMultiSelectionText(List<string> selectedValues)
    {
        return $"Se ha seleccionado {selectedValues.Count}";
    }
    //fin

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    void Cancel() => MudDialog.Cancel();
    private async Task Save()
    {
        Console.WriteLine("####################");
        foreach (var idFamily in options)
        {
            Console.WriteLine(idFamily);
            var response = familyService.addFamilyInMonitor(monitor, idFamily);
            if (response)
            {
                Snackbar.Add("Se guardo correctamente", Severity.Success);
                Console.WriteLine("exito");
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add("Error al guardar", Severity.Error);
                Console.WriteLine("bad");
                MudDialog.Close(DialogResult.Cancel());
            }
        }
    }
}