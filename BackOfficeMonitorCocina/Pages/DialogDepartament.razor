@using MudBlazor;
@using BackOfficeMonitorCocina.DTO;

@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Family> _FamilyService
@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Department> _DepartmentService

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
 
<EditForm Model="@departmentDto" OnValidSubmit="Save">
<DataAnnotationsValidator/>
<MudDialog>
    <DialogContent>
            <MudTextField @bind-Value="@departmentDto.Name" Label="Nombre" For="@(() => departmentDto.Name)"></MudTextField>
            
            
            <MudSelect @bind-Value="stringValue" Label="Familia" HelperText="String" Placeholder="Please Select"
                       AdornmentIcon="@Icons.Material.Filled.Fastfood" AdornmentColor="Color.Primary" For="@(() => departmentDto.prueba)">
                @* <MudSelectItem Value=0 Disabled="true">Selecciona una familia</MudSelectItem> *@
                <MudSelectItem Value="@(new FamilyDto() { Id=1, Name="pizza"})">Pizza</MudSelectItem>
                <MudSelectItem Value="@(new FamilyDto() { Id=2, Name="Bebidas"})">Bebidas</MudSelectItem>
 
            </MudSelect>

        </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        @* <MudButton Color="Color.Primary" OnClick="Save">Guardar</MudButton> *@
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Guardar</MudButton>

    </DialogActions>
    </MudDialog>
</EditForm>
@code {
    //prueba de validacion
    [Parameter] public DepartmentDto departmentDto { get; set; } = new DepartmentDto();
    private FamilyDto stringValue { get; set; } = new FamilyDto();
    private IEnumerable<FamilyDto> options { get; set; } = new List<FamilyDto>();

    


    //[Parameter]
    //public IEnumerable<DTO.FamilyDto> familyList { get; set; } = Array.Empty<FamilyDto>();
    //fin prueba
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public DAL.DAO.Department department { get; set; } = new DAL.DAO.Department();
    [Parameter]
    public IEnumerable<DAL.DAO.Family> familyList { get; set; } = Array.Empty<DAL.DAO.Family>();
    [Parameter] 
    public int idFamily { get; set; }

    //Familia pasar guardar
    public DAL.DAO.Family family { get; set; } = new DAL.DAO.Family();



    //me falta obtener la id de la familia del departamento para la parte de edicion 
    //se debe de poner if el se al guardar o edidat 
    void Cancel() => MudDialog.Cancel();


    private async Task Save(EditContext context)
    {
        Console.WriteLine("##############");
        Console.WriteLine(department.Id);
        Console.WriteLine(department.Id);
        //Console.WriteLine(IdFamily);

        // if(department.Id != 0)
        // {
        //     //actualizar 
        //     family = await _FamilyService.GetByIdAsync(idFamily);
        //     department.Family = family;
        //     var response = _DepartmentService.Update(department);
        //     if (response)
        //     {
        //         Snackbar.Add("Se guardo correctamente", Severity.Success);
        //         Console.WriteLine("exito");
        //         MudDialog.Close(DialogResult.Ok(true));
        //     }
        //     else
        //     {
        //         Snackbar.Add("Error al guardar", Severity.Error);
        //         Console.WriteLine("bad");
        //         MudDialog.Close(DialogResult.Cancel());
        //     }
        // }
        // else
        // {
        //     //GUARDAR
        //     family = await _FamilyService.GetByIdAsync(idFamily);
        //     department.Family = family;
        //     var response = _DepartmentService.Insert(department);
        //     if (response)
        //     {
        //         Snackbar.Add("Se guardo correctamente", Severity.Success);
        //         Console.WriteLine("exito");
        //         MudDialog.Close(DialogResult.Ok(true));
        //     }
        //     else
        //     {
        //         Snackbar.Add("Error al guardar", Severity.Error);
        //         Console.WriteLine("bad");
        //         MudDialog.Close(DialogResult.Cancel());
        //     }
        // }
 

     


    }

}
