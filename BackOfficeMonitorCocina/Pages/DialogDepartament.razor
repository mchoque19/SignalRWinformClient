@using MudBlazor;
 
@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Family> _FamilyService
@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Department> _DepartmentService

@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
 
<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="@department.Name" Label="Nombre"></MudTextField>
        <MudSelect T="int" Label="Familia" AnchorOrigin="Origin.BottomCenter" @bind-Value="idFamily">
            @foreach (var item in familyList)
            {
                <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>

            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Guardar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] public DAL.DAO.Department department { get; set; } = new DAL.DAO.Department();
    [Parameter]
    public IEnumerable<DAL.DAO.Family> familyList { get; set; } = Array.Empty<DAL.DAO.Family>();
    [Parameter] 
    public int idFamily { get; set; }

    //Familia pasar guardar
    public DAL.DAO.Family family { get; set; } = new DAL.DAO.Family();



    //me falta obtener la id de la familia del departamento para la parte de edicion 
    //se debe de poner if el se al guardar o edidat 
    void Cancel() => MudDialog.Cancel();

    private async Task Save()
    {
        Console.WriteLine("##############");
        Console.WriteLine(department.Id);
        //Console.WriteLine(IdFamily);

        if(department.Id != 0)
        {
            //actualizar 
            await base.OnInitializedAsync();
            family = await _FamilyService.GetByIdAsync(idFamily);
            department.Family = family;
            var response = _DepartmentService.Update(department);
            if (response)
            {
                Snackbar.Add("Se guardo correctamente", Severity.Success);
                Console.WriteLine("exito");
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add("Error al guardar", Severity.Error);
                Console.WriteLine("bad");
                MudDialog.Close(DialogResult.Cancel());
            }
        }
        else
        {
            await base.OnInitializedAsync();
            //GUARDAR
            family = await _FamilyService.GetByIdAsync(idFamily);
            department.Family = family;
            var response = _DepartmentService.Insert(department);
            if (response)
            {
                Snackbar.Add("Se guardo correctamente", Severity.Success);
                Console.WriteLine("exito");
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add("Error al guardar", Severity.Error);
                Console.WriteLine("bad");
                MudDialog.Close(DialogResult.Cancel());
            }
        }
 

     


    }

}
