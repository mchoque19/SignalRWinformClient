@page "/pagenew"
@using BackOfficeMonitorCocina.Validator;
@inject DAL.Interfaces.IGenericRepository<DAL.DAO.Monitor> _monitorService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm Model="@monitor" @ref="@form" Validation="@(monitorValidator.ValidateValue)" ValidationDelay="0">
            <MudTextField @bind-Value="monitor.Name"
                          For="@(() => monitor.Name)"
                          Immediate="true"
                          Label="Nombre" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await Submit())">Guardar</MudButton>
    </DialogActions>
</MudDialog>



@code {
 
    MudForm form;
    MonitorValidator monitorValidator = new MonitorValidator();


    [Parameter] public DAL.DAO.Monitor monitor { get; set; } = new DAL.DAO.Monitor();

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    void Cancel() => MudDialog.Cancel();

    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            if (monitor.Id != 0)
            {
                var response = _monitorService.Update(monitor);
                snackBarReponse(response);
            }
            else
            {
                var response = _monitorService.Insert(monitor);
                snackBarReponse(response);
            }
        }
    }

    public void snackBarReponse(bool response)
    {
        if (response)
        {
            Snackbar.Add("Se guardo correctamente", Severity.Success);
            Console.WriteLine("exito");
            MudDialog.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add("Error al guardar", Severity.Error);
            Console.WriteLine("bad");
            MudDialog.Close(DialogResult.Cancel());
        }
    }
      
}